/*
 * generated by Xtext 2.28.0
 */
package game.of.life.tasks.validation;

import java.util.List;

import org.eclipse.emf.common.util.EList;
import org.eclipse.xtext.validation.Check;

import game.of.life.tasks.tASKDSL.GridSize;
import game.of.life.tasks.tASKDSL.StartGrid;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class TASKDSLValidator extends AbstractTASKDSLValidator {
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					TASKDSLPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
	
	@Check 
	  void checkStartGridCoordinates(GridSize gs, StartGrid sg) 
	{ 
	    Integer height = gs.getH();
	    Integer length = gs.getL();
	    
	    EList<StartGrid> sglist = (EList<StartGrid>) sg.eGet(null, false); 
	    for(int i=0; i<sglist.size();i++)
	    {
	    	if((((List<StartGrid>) sg).get(i).getXC())>height || (((List<StartGrid>) sg).get(i).getXC())<0)
	    	{
	    		error("X axis out of grid",null);
	    	}
	    	if(sg.eGet(i).getYC()>length || sg.eGet(i).getYC()<0)
	    	{
	    		error("Y axis out of grid",null);
	    	}
	    	if((sg.eGet(i).getYC()>length && sg.eGet(i).getYC()<0) && (sg.eGet(i).getXC()>height && sg.eGet(i).getXC()<0))
	    	{
	    		info("X and Y axis are valid and in the grid",null);
	    	}
	    	
	    }
	}
	    
	    
	   
	    @Check 
	    void checkDoublePersons(Planning planning){ 
	      EList<Person> plist = planning.getPersons(); // lists start at 
	  position 0 
	      for (int i = 0; i < plist.size() ; i++){ 
	        for (int j = i+1; j < plist.size() ; j++){ 
	          if 
	  (plist.get(i).getName().equals(plist.get(j).getName())) { 
	            error("Double name",null); 
	          } 
	        } 
	      } 
	    } 
	  } 
	      }
}
