/*
 * generated by Xtext 2.28.0
 */
grammar InternalTASKDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package game.of.life.tasks.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package game.of.life.tasks.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import game.of.life.tasks.services.TASKDSLGrammarAccess;

}

@parser::members {

 	private TASKDSLGrammarAccess grammarAccess;

    public InternalTASKDSLParser(TokenStream input, TASKDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected TASKDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getModelAccess().getGameParserRuleCall());
	}
	this_Game_0=ruleGame
	{
		$current = $this_Game_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleGame
entryRuleGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameRule()); }
	iv_ruleGame=ruleGame
	{ $current=$iv_ruleGame.current; }
	EOF;

// Rule Game
ruleGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Game:'
		{
			newLeafNode(otherlv_0, grammarAccess.getGameAccess().getGameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGameAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getGameStatusGameStatusParserRuleCall_2_0());
				}
				lv_gameStatus_2_0=ruleGameStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"gameStatus",
						lv_gameStatus_2_0,
						"game.of.life.tasks.TASKDSL.GameStatus");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getGridSizeGridSizeParserRuleCall_3_0());
				}
				lv_gridSize_3_0=ruleGridSize
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"gridSize",
						lv_gridSize_3_0,
						"game.of.life.tasks.TASKDSL.GridSize");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getStartGridStartGridParserRuleCall_4_0_0());
					}
					lv_startGrid_4_0=ruleStartGrid
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						add(
							$current,
							"startGrid",
							lv_startGrid_4_0,
							"game.of.life.tasks.TASKDSL.StartGrid");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getAllCellsCellParserRuleCall_4_1_0());
					}
					lv_allCells_5_0=ruleCell
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						add(
							$current,
							"allCells",
							lv_allCells_5_0,
							"game.of.life.tasks.TASKDSL.Cell");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleGridSize
entryRuleGridSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGridSizeRule()); }
	iv_ruleGridSize=ruleGridSize
	{ $current=$iv_ruleGridSize.current; }
	EOF;

// Rule GridSize
ruleGridSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Height:'
		{
			newLeafNode(otherlv_0, grammarAccess.getGridSizeAccess().getHeightKeyword_0());
		}
		(
			(
				lv_h_1_0=RULE_INT
				{
					newLeafNode(lv_h_1_0, grammarAccess.getGridSizeAccess().getHINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGridSizeRule());
					}
					setWithLastConsumed(
						$current,
						"h",
						lv_h_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='Length:'
		{
			newLeafNode(otherlv_2, grammarAccess.getGridSizeAccess().getLengthKeyword_2());
		}
		(
			(
				lv_l_3_0=RULE_INT
				{
					newLeafNode(lv_l_3_0, grammarAccess.getGridSizeAccess().getLINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGridSizeRule());
					}
					setWithLastConsumed(
						$current,
						"l",
						lv_l_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleGameStatus
entryRuleGameStatus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameStatusRule()); }
	iv_ruleGameStatus=ruleGameStatus
	{ $current=$iv_ruleGameStatus.current; }
	EOF;

// Rule GameStatus
ruleGameStatus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GameStatus:'
		{
			newLeafNode(otherlv_0, grammarAccess.getGameStatusAccess().getGameStatusKeyword_0());
		}
		(
			(
				lv_gs_1_0=RULE_INT
				{
					newLeafNode(lv_gs_1_0, grammarAccess.getGameStatusAccess().getGsINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGameStatusRule());
					}
					setWithLastConsumed(
						$current,
						"gs",
						lv_gs_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleStartGrid
entryRuleStartGrid returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartGridRule()); }
	iv_ruleStartGrid=ruleStartGrid
	{ $current=$iv_ruleStartGrid.current; }
	EOF;

// Rule StartGrid
ruleStartGrid returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='InitiallyActiveCell:'
		{
			newLeafNode(otherlv_0, grammarAccess.getStartGridAccess().getInitiallyActiveCellKeyword_0());
		}
		otherlv_1='x-Coord:'
		{
			newLeafNode(otherlv_1, grammarAccess.getStartGridAccess().getXCoordKeyword_1());
		}
		(
			(
				lv_xC_2_0=RULE_INT
				{
					newLeafNode(lv_xC_2_0, grammarAccess.getStartGridAccess().getXCINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartGridRule());
					}
					setWithLastConsumed(
						$current,
						"xC",
						lv_xC_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='y-Coord:'
		{
			newLeafNode(otherlv_3, grammarAccess.getStartGridAccess().getYCoordKeyword_3());
		}
		(
			(
				lv_yC_4_0=RULE_INT
				{
					newLeafNode(lv_yC_4_0, grammarAccess.getStartGridAccess().getYCINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartGridRule());
					}
					setWithLastConsumed(
						$current,
						"yC",
						lv_yC_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleavAction
entryRuleavAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAvActionRule()); }
	iv_ruleavAction=ruleavAction
	{ $current=$iv_ruleavAction.current; }
	EOF;

// Rule avAction
ruleavAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Birth'
			{
				newLeafNode(otherlv_0, grammarAccess.getAvActionAccess().getBirthKeyword_0_0());
			}
			(
				(
					lv_birth_1_0=RULE_INT
					{
						newLeafNode(lv_birth_1_0, grammarAccess.getAvActionAccess().getBirthINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAvActionRule());
						}
						setWithLastConsumed(
							$current,
							"birth",
							lv_birth_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_2='Overcrowding'
			{
				newLeafNode(otherlv_2, grammarAccess.getAvActionAccess().getOvercrowdingKeyword_1_0());
			}
			(
				(
					lv_overcrowd_3_0=RULE_INT
					{
						newLeafNode(lv_overcrowd_3_0, grammarAccess.getAvActionAccess().getOvercrowdINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAvActionRule());
						}
						setWithLastConsumed(
							$current,
							"overcrowd",
							lv_overcrowd_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_4='Xisolation'
			{
				newLeafNode(otherlv_4, grammarAccess.getAvActionAccess().getXisolationKeyword_2_0());
			}
			(
				(
					lv_xiso_5_0=RULE_INT
					{
						newLeafNode(lv_xiso_5_0, grammarAccess.getAvActionAccess().getXisoINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAvActionRule());
						}
						setWithLastConsumed(
							$current,
							"xiso",
							lv_xiso_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_6='Survival'
			{
				newLeafNode(otherlv_6, grammarAccess.getAvActionAccess().getSurvivalKeyword_3_0());
			}
			(
				(
					lv_sur_7_0=RULE_INT
					{
						newLeafNode(lv_sur_7_0, grammarAccess.getAvActionAccess().getSurINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAvActionRule());
						}
						setWithLastConsumed(
							$current,
							"sur",
							lv_sur_7_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCell
entryRuleCell returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCellRule()); }
	iv_ruleCell=ruleCell
	{ $current=$iv_ruleCell.current; }
	EOF;

// Rule Cell
ruleCell returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Cell:'
		{
			newLeafNode(otherlv_0, grammarAccess.getCellAccess().getCellKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCellAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCellRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='x-Coordinate:'
		{
			newLeafNode(otherlv_2, grammarAccess.getCellAccess().getXCoordinateKeyword_2());
		}
		(
			(
				lv_x_3_0=RULE_INT
				{
					newLeafNode(lv_x_3_0, grammarAccess.getCellAccess().getXINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCellRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='y-Coordinate:'
		{
			newLeafNode(otherlv_4, grammarAccess.getCellAccess().getYCoordinateKeyword_4());
		}
		(
			(
				lv_y_5_0=RULE_INT
				{
					newLeafNode(lv_y_5_0, grammarAccess.getCellAccess().getYINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCellRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='neighborNo:'
		{
			newLeafNode(otherlv_6, grammarAccess.getCellAccess().getNeighborNoKeyword_6());
		}
		(
			(
				lv_nNo_7_0=RULE_INT
				{
					newLeafNode(lv_nNo_7_0, grammarAccess.getCellAccess().getNNoINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCellRule());
					}
					setWithLastConsumed(
						$current,
						"nNo",
						lv_nNo_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8='status:'
		{
			newLeafNode(otherlv_8, grammarAccess.getCellAccess().getStatusKeyword_8());
		}
		(
			(
				lv_s_9_0=RULE_INT
				{
					newLeafNode(lv_s_9_0, grammarAccess.getCellAccess().getSINTTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCellRule());
					}
					setWithLastConsumed(
						$current,
						"s",
						lv_s_9_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_10='availableAction:'
		{
			newLeafNode(otherlv_10, grammarAccess.getCellAccess().getAvailableActionKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCellAccess().getAvActionAvActionParserRuleCall_11_0());
				}
				lv_avAction_11_0=ruleavAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCellRule());
					}
					set(
						$current,
						"avAction",
						lv_avAction_11_0,
						"game.of.life.tasks.TASKDSL.avAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
