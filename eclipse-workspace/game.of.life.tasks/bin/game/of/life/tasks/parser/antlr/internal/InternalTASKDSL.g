/*
 * generated by Xtext 2.28.0
 */
grammar InternalTASKDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package game.of.life.tasks.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package game.of.life.tasks.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import game.of.life.tasks.services.TASKDSLGrammarAccess;

}

@parser::members {

 	private TASKDSLGrammarAccess grammarAccess;

    public InternalTASKDSLParser(TokenStream input, TASKDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected TASKDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getModelAccess().getGameParserRuleCall());
	}
	this_Game_0=ruleGame
	{
		$current = $this_Game_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleGame
entryRuleGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameRule()); }
	iv_ruleGame=ruleGame
	{ $current=$iv_ruleGame.current; }
	EOF;

// Rule Game
ruleGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Game:'
		{
			newLeafNode(otherlv_0, grammarAccess.getGameAccess().getGameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGameAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='GridSize:'
		{
			newLeafNode(otherlv_2, grammarAccess.getGameAccess().getGridSizeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getGridSizeGridSizeParserRuleCall_3_0());
				}
				lv_gridSize_3_0=ruleGridSize
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"gridSize",
						lv_gridSize_3_0,
						"game.of.life.tasks.TASKDSL.GridSize");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='EvolutionRules:'
		{
			newLeafNode(otherlv_4, grammarAccess.getGameAccess().getEvolutionRulesKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getEvolutionRulesEvolutionRulesParserRuleCall_5_0());
				}
				lv_evolutionRules_5_0=ruleevolutionRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"evolutionRules",
						lv_evolutionRules_5_0,
						"game.of.life.tasks.TASKDSL.evolutionRules");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='InitiallyActiveCells:'
		{
			newLeafNode(otherlv_6, grammarAccess.getGameAccess().getInitiallyActiveCellsKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getStartGridStartGridParserRuleCall_7_0());
				}
				lv_startGrid_7_0=ruleStartGrid
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"startGrid",
						lv_startGrid_7_0,
						"game.of.life.tasks.TASKDSL.StartGrid");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='AllCells:'
		{
			newLeafNode(otherlv_8, grammarAccess.getGameAccess().getAllCellsKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getAllCellsCellParserRuleCall_9_0());
				}
				lv_allCells_9_0=ruleCell
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"allCells",
						lv_allCells_9_0,
						"game.of.life.tasks.TASKDSL.Cell");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleGridSize
entryRuleGridSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGridSizeRule()); }
	iv_ruleGridSize=ruleGridSize
	{ $current=$iv_ruleGridSize.current; }
	EOF;

// Rule GridSize
ruleGridSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Height:'
		{
			newLeafNode(otherlv_0, grammarAccess.getGridSizeAccess().getHeightKeyword_0());
		}
		(
			(
				lv_h_1_0=RULE_INT
				{
					newLeafNode(lv_h_1_0, grammarAccess.getGridSizeAccess().getHINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGridSizeRule());
					}
					setWithLastConsumed(
						$current,
						"h",
						lv_h_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='Length:'
		{
			newLeafNode(otherlv_2, grammarAccess.getGridSizeAccess().getLengthKeyword_2());
		}
		(
			(
				lv_l_3_0=RULE_INT
				{
					newLeafNode(lv_l_3_0, grammarAccess.getGridSizeAccess().getLINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGridSizeRule());
					}
					setWithLastConsumed(
						$current,
						"l",
						lv_l_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleStartGrid
entryRuleStartGrid returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartGridRule()); }
	iv_ruleStartGrid=ruleStartGrid
	{ $current=$iv_ruleStartGrid.current; }
	EOF;

// Rule StartGrid
ruleStartGrid returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CoordinateInfo:'
		{
			newLeafNode(otherlv_0, grammarAccess.getStartGridAccess().getCoordinateInfoKeyword_0());
		}
		otherlv_1='x:'
		{
			newLeafNode(otherlv_1, grammarAccess.getStartGridAccess().getXKeyword_1());
		}
		(
			(
				lv_xC_2_0=RULE_INT
				{
					newLeafNode(lv_xC_2_0, grammarAccess.getStartGridAccess().getXCINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartGridRule());
					}
					setWithLastConsumed(
						$current,
						"xC",
						lv_xC_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='y:'
		{
			newLeafNode(otherlv_3, grammarAccess.getStartGridAccess().getYKeyword_3());
		}
		(
			(
				lv_yC_4_0=RULE_INT
				{
					newLeafNode(lv_yC_4_0, grammarAccess.getStartGridAccess().getYCINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartGridRule());
					}
					setWithLastConsumed(
						$current,
						"yC",
						lv_yC_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='Status:'
		{
			newLeafNode(otherlv_5, grammarAccess.getStartGridAccess().getStatusKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartGridAccess().getSStatusEnumRuleCall_6_0());
				}
				lv_s_6_0=ruleStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartGridRule());
					}
					set(
						$current,
						"s",
						lv_s_6_0,
						"game.of.life.tasks.TASKDSL.Status");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCell
entryRuleCell returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCellRule()); }
	iv_ruleCell=ruleCell
	{ $current=$iv_ruleCell.current; }
	EOF;

// Rule Cell
ruleCell returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CoordinateInfo:'
		{
			newLeafNode(otherlv_0, grammarAccess.getCellAccess().getCoordinateInfoKeyword_0());
		}
		otherlv_1='x:'
		{
			newLeafNode(otherlv_1, grammarAccess.getCellAccess().getXKeyword_1());
		}
		(
			(
				lv_xC_2_0=RULE_INT
				{
					newLeafNode(lv_xC_2_0, grammarAccess.getCellAccess().getXCINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCellRule());
					}
					setWithLastConsumed(
						$current,
						"xC",
						lv_xC_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='y:'
		{
			newLeafNode(otherlv_3, grammarAccess.getCellAccess().getYKeyword_3());
		}
		(
			(
				lv_yC_4_0=RULE_INT
				{
					newLeafNode(lv_yC_4_0, grammarAccess.getCellAccess().getYCINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCellRule());
					}
					setWithLastConsumed(
						$current,
						"yC",
						lv_yC_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='Status:'
		{
			newLeafNode(otherlv_5, grammarAccess.getCellAccess().getStatusKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCellAccess().getSStatusEnumRuleCall_6_0());
				}
				lv_s_6_0=ruleStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCellRule());
					}
					set(
						$current,
						"s",
						lv_s_6_0,
						"game.of.life.tasks.TASKDSL.Status");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleevolutionRules
entryRuleevolutionRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvolutionRulesRule()); }
	iv_ruleevolutionRules=ruleevolutionRules
	{ $current=$iv_ruleevolutionRules.current; }
	EOF;

// Rule evolutionRules
ruleevolutionRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvolutionRulesAccess().getIfKeyword_0());
		}
		otherlv_1='neighborNo='
		{
			newLeafNode(otherlv_1, grammarAccess.getEvolutionRulesAccess().getNeighborNoKeyword_1());
		}
		(
			(
				lv_nNo_2_0=RULE_INT
				{
					newLeafNode(lv_nNo_2_0, grammarAccess.getEvolutionRulesAccess().getNNoINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvolutionRulesRule());
					}
					setWithLastConsumed(
						$current,
						"nNo",
						lv_nNo_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEvolutionRulesAccess().getLLogicalRelationEnumRuleCall_3_0());
				}
				lv_l_3_0=rulelogicalRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvolutionRulesRule());
					}
					set(
						$current,
						"l",
						lv_l_3_0,
						"game.of.life.tasks.TASKDSL.logicalRelation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_comparedNo_4_0=RULE_INT
				{
					newLeafNode(lv_comparedNo_4_0, grammarAccess.getEvolutionRulesAccess().getComparedNoINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvolutionRulesRule());
					}
					setWithLastConsumed(
						$current,
						"comparedNo",
						lv_comparedNo_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='and'
		{
			newLeafNode(otherlv_5, grammarAccess.getEvolutionRulesAccess().getAndKeyword_5());
		}
		otherlv_6='Cell Status'
		{
			newLeafNode(otherlv_6, grammarAccess.getEvolutionRulesAccess().getCellStatusKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvolutionRulesAccess().getSStatusEnumRuleCall_7_0());
				}
				lv_s_7_0=ruleStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvolutionRulesRule());
					}
					set(
						$current,
						"s",
						lv_s_7_0,
						"game.of.life.tasks.TASKDSL.Status");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='then'
		{
			newLeafNode(otherlv_8, grammarAccess.getEvolutionRulesAccess().getThenKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvolutionRulesAccess().getResultResultEnumRuleCall_9_0());
				}
				lv_result_9_0=ruleResult
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvolutionRulesRule());
					}
					set(
						$current,
						"result",
						lv_result_9_0,
						"game.of.life.tasks.TASKDSL.Result");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule logicalRelation
rulelogicalRelation returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='=='
			{
				$current = grammarAccess.getLogicalRelationAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLogicalRelationAccess().getEQUALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='>'
			{
				$current = grammarAccess.getLogicalRelationAccess().getGREATERTHANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLogicalRelationAccess().getGREATERTHANEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='<'
			{
				$current = grammarAccess.getLogicalRelationAccess().getLESSTHANEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLogicalRelationAccess().getLESSTHANEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='>='
			{
				$current = grammarAccess.getLogicalRelationAccess().getGREATEROREQUALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getLogicalRelationAccess().getGREATEROREQUALEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='<='
			{
				$current = grammarAccess.getLogicalRelationAccess().getLESSOREQUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getLogicalRelationAccess().getLESSOREQUALEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule Status
ruleStatus returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Live'
			{
				$current = grammarAccess.getStatusAccess().getLIVEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getStatusAccess().getLIVEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Dead'
			{
				$current = grammarAccess.getStatusAccess().getDEADEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getStatusAccess().getDEADEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Result
ruleResult returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Birth'
			{
				$current = grammarAccess.getResultAccess().getBIRTHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getResultAccess().getBIRTHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='OverCrowd'
			{
				$current = grammarAccess.getResultAccess().getOVERCROWDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getResultAccess().getOVERCROWDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='xisolate'
			{
				$current = grammarAccess.getResultAccess().getXSOLATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getResultAccess().getXSOLATEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Survive'
			{
				$current = grammarAccess.getResultAccess().getSURVIVEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getResultAccess().getSURVIVEEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
