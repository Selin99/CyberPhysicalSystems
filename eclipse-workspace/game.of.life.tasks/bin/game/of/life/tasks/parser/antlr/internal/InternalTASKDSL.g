/*
 * generated by Xtext 2.28.0
 */
grammar InternalTASKDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package game.of.life.tasks.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package game.of.life.tasks.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import game.of.life.tasks.services.TASKDSLGrammarAccess;

}

@parser::members {

 	private TASKDSLGrammarAccess grammarAccess;

    public InternalTASKDSLParser(TokenStream input, TASKDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected TASKDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getModelAccess().getGameParserRuleCall());
	}
	this_Game_0=ruleGame
	{
		$current = $this_Game_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleGame
entryRuleGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameRule()); }
	iv_ruleGame=ruleGame
	{ $current=$iv_ruleGame.current; }
	EOF;

// Rule Game
ruleGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Game:'
		{
			newLeafNode(otherlv_0, grammarAccess.getGameAccess().getGameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGameAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='GameStatus:'
		{
			newLeafNode(otherlv_2, grammarAccess.getGameAccess().getGameStatusKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getGameStatusGameStatusParserRuleCall_3_0());
				}
				lv_gameStatus_3_0=ruleGameStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"gameStatus",
						lv_gameStatus_3_0,
						"game.of.life.tasks.TASKDSL.GameStatus");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='GridSize:'
		{
			newLeafNode(otherlv_4, grammarAccess.getGameAccess().getGridSizeKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getGridSizeGridSizeParserRuleCall_5_0());
				}
				lv_gridSize_5_0=ruleGridSize
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"gridSize",
						lv_gridSize_5_0,
						"game.of.life.tasks.TASKDSL.GridSize");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='EvolutionRules:'
		{
			newLeafNode(otherlv_6, grammarAccess.getGameAccess().getEvolutionRulesKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getEvolutionRulesEvolutionRulesParserRuleCall_7_0());
				}
				lv_evolutionRules_7_0=ruleevolutionRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"evolutionRules",
						lv_evolutionRules_7_0,
						"game.of.life.tasks.TASKDSL.evolutionRules");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='InitiallyActiveCells:'
		{
			newLeafNode(otherlv_8, grammarAccess.getGameAccess().getInitiallyActiveCellsKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getStartGridStartGridParserRuleCall_9_0());
				}
				lv_startGrid_9_0=ruleStartGrid
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"startGrid",
						lv_startGrid_9_0,
						"game.of.life.tasks.TASKDSL.StartGrid");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='AllCells:'
		{
			newLeafNode(otherlv_10, grammarAccess.getGameAccess().getAllCellsKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getAllCellsCellParserRuleCall_11_0());
				}
				lv_allCells_11_0=ruleCell
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"allCells",
						lv_allCells_11_0,
						"game.of.life.tasks.TASKDSL.Cell");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleGridSize
entryRuleGridSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGridSizeRule()); }
	iv_ruleGridSize=ruleGridSize
	{ $current=$iv_ruleGridSize.current; }
	EOF;

// Rule GridSize
ruleGridSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Height:'
		{
			newLeafNode(otherlv_0, grammarAccess.getGridSizeAccess().getHeightKeyword_0());
		}
		(
			(
				lv_h_1_0=RULE_INT
				{
					newLeafNode(lv_h_1_0, grammarAccess.getGridSizeAccess().getHINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGridSizeRule());
					}
					setWithLastConsumed(
						$current,
						"h",
						lv_h_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='Length:'
		{
			newLeafNode(otherlv_2, grammarAccess.getGridSizeAccess().getLengthKeyword_2());
		}
		(
			(
				lv_l_3_0=RULE_INT
				{
					newLeafNode(lv_l_3_0, grammarAccess.getGridSizeAccess().getLINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGridSizeRule());
					}
					setWithLastConsumed(
						$current,
						"l",
						lv_l_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleGameStatus
entryRuleGameStatus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameStatusRule()); }
	iv_ruleGameStatus=ruleGameStatus
	{ $current=$iv_ruleGameStatus.current; }
	EOF;

// Rule GameStatus
ruleGameStatus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_so_0_1='Continue'
				{
					newLeafNode(lv_so_0_1, grammarAccess.getGameStatusAccess().getSoContinueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGameStatusRule());
					}
					setWithLastConsumed($current, "so", lv_so_0_1, null);
				}
				    |
				lv_so_0_2='Over'
				{
					newLeafNode(lv_so_0_2, grammarAccess.getGameStatusAccess().getSoOverKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGameStatusRule());
					}
					setWithLastConsumed($current, "so", lv_so_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleStartGrid
entryRuleStartGrid returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartGridRule()); }
	iv_ruleStartGrid=ruleStartGrid
	{ $current=$iv_ruleStartGrid.current; }
	EOF;

// Rule StartGrid
ruleStartGrid returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CoordinateInfo:'
		{
			newLeafNode(otherlv_0, grammarAccess.getStartGridAccess().getCoordinateInfoKeyword_0());
		}
		otherlv_1='x:'
		{
			newLeafNode(otherlv_1, grammarAccess.getStartGridAccess().getXKeyword_1());
		}
		(
			(
				lv_xC_2_0=RULE_INT
				{
					newLeafNode(lv_xC_2_0, grammarAccess.getStartGridAccess().getXCINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartGridRule());
					}
					setWithLastConsumed(
						$current,
						"xC",
						lv_xC_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='y:'
		{
			newLeafNode(otherlv_3, grammarAccess.getStartGridAccess().getYKeyword_3());
		}
		(
			(
				lv_yC_4_0=RULE_INT
				{
					newLeafNode(lv_yC_4_0, grammarAccess.getStartGridAccess().getYCINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartGridRule());
					}
					setWithLastConsumed(
						$current,
						"yC",
						lv_yC_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='NeighborNo:'
		{
			newLeafNode(otherlv_5, grammarAccess.getStartGridAccess().getNeighborNoKeyword_5());
		}
		(
			(
				lv_nNo_6_0=RULE_INT
				{
					newLeafNode(lv_nNo_6_0, grammarAccess.getStartGridAccess().getNNoINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartGridRule());
					}
					setWithLastConsumed(
						$current,
						"nNo",
						lv_nNo_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7='Status:'
		{
			newLeafNode(otherlv_7, grammarAccess.getStartGridAccess().getStatusKeyword_7());
		}
		(
			(
				lv_s_8_0='Live'
				{
					newLeafNode(lv_s_8_0, grammarAccess.getStartGridAccess().getSLiveKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartGridRule());
					}
					setWithLastConsumed($current, "s", lv_s_8_0, "Live");
				}
			)
		)
		otherlv_9='NextGeneration:'
		{
			newLeafNode(otherlv_9, grammarAccess.getStartGridAccess().getNextGenerationKeyword_9());
		}
		(
			(
				(
					lv_a_10_1='Birth'
					{
						newLeafNode(lv_a_10_1, grammarAccess.getStartGridAccess().getABirthKeyword_10_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStartGridRule());
						}
						setWithLastConsumed($current, "a", lv_a_10_1, null);
					}
					    |
					lv_a_10_2='OverCrowd'
					{
						newLeafNode(lv_a_10_2, grammarAccess.getStartGridAccess().getAOverCrowdKeyword_10_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStartGridRule());
						}
						setWithLastConsumed($current, "a", lv_a_10_2, null);
					}
					    |
					lv_a_10_3='xisolate'
					{
						newLeafNode(lv_a_10_3, grammarAccess.getStartGridAccess().getAXisolateKeyword_10_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStartGridRule());
						}
						setWithLastConsumed($current, "a", lv_a_10_3, null);
					}
					    |
					lv_a_10_4='Survive'
					{
						newLeafNode(lv_a_10_4, grammarAccess.getStartGridAccess().getASurviveKeyword_10_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStartGridRule());
						}
						setWithLastConsumed($current, "a", lv_a_10_4, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCell
entryRuleCell returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCellRule()); }
	iv_ruleCell=ruleCell
	{ $current=$iv_ruleCell.current; }
	EOF;

// Rule Cell
ruleCell returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CoordinateInfo:'
		{
			newLeafNode(otherlv_0, grammarAccess.getCellAccess().getCoordinateInfoKeyword_0());
		}
		otherlv_1='x:'
		{
			newLeafNode(otherlv_1, grammarAccess.getCellAccess().getXKeyword_1());
		}
		(
			(
				lv_x_2_0=RULE_INT
				{
					newLeafNode(lv_x_2_0, grammarAccess.getCellAccess().getXINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCellRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='y:'
		{
			newLeafNode(otherlv_3, grammarAccess.getCellAccess().getYKeyword_3());
		}
		(
			(
				lv_y_4_0=RULE_INT
				{
					newLeafNode(lv_y_4_0, grammarAccess.getCellAccess().getYINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCellRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='NeighborNo:'
		{
			newLeafNode(otherlv_5, grammarAccess.getCellAccess().getNeighborNoKeyword_5());
		}
		(
			(
				lv_nNo_6_0=RULE_INT
				{
					newLeafNode(lv_nNo_6_0, grammarAccess.getCellAccess().getNNoINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCellRule());
					}
					setWithLastConsumed(
						$current,
						"nNo",
						lv_nNo_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7='Status:'
		{
			newLeafNode(otherlv_7, grammarAccess.getCellAccess().getStatusKeyword_7());
		}
		(
			(
				(
					lv_s_8_1='Live'
					{
						newLeafNode(lv_s_8_1, grammarAccess.getCellAccess().getSLiveKeyword_8_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCellRule());
						}
						setWithLastConsumed($current, "s", lv_s_8_1, null);
					}
					    |
					lv_s_8_2='Dead'
					{
						newLeafNode(lv_s_8_2, grammarAccess.getCellAccess().getSDeadKeyword_8_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCellRule());
						}
						setWithLastConsumed($current, "s", lv_s_8_2, null);
					}
				)
			)
		)
		otherlv_9='NextGeneration:'
		{
			newLeafNode(otherlv_9, grammarAccess.getCellAccess().getNextGenerationKeyword_9());
		}
		(
			(
				(
					lv_a_10_1='Birth'
					{
						newLeafNode(lv_a_10_1, grammarAccess.getCellAccess().getABirthKeyword_10_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCellRule());
						}
						setWithLastConsumed($current, "a", lv_a_10_1, null);
					}
					    |
					lv_a_10_2='OverCrowd'
					{
						newLeafNode(lv_a_10_2, grammarAccess.getCellAccess().getAOverCrowdKeyword_10_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCellRule());
						}
						setWithLastConsumed($current, "a", lv_a_10_2, null);
					}
					    |
					lv_a_10_3='xisolate'
					{
						newLeafNode(lv_a_10_3, grammarAccess.getCellAccess().getAXisolateKeyword_10_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCellRule());
						}
						setWithLastConsumed($current, "a", lv_a_10_3, null);
					}
					    |
					lv_a_10_4='Survive'
					{
						newLeafNode(lv_a_10_4, grammarAccess.getCellAccess().getASurviveKeyword_10_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCellRule());
						}
						setWithLastConsumed($current, "a", lv_a_10_4, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleevolutionRules
entryRuleevolutionRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvolutionRulesRule()); }
	iv_ruleevolutionRules=ruleevolutionRules
	{ $current=$iv_ruleevolutionRules.current; }
	EOF;

// Rule evolutionRules
ruleevolutionRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvolutionRulesAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvolutionRulesAccess().getBoolExpressionParserRuleCall_1_0());
				}
				lv_bool_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvolutionRulesRule());
					}
					set(
						$current,
						"bool",
						lv_bool_1_0,
						"game.of.life.tasks.TASKDSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getEvolutionRulesAccess().getThenKeyword_2());
		}
		(
			otherlv_3='Birth'
			{
				newLeafNode(otherlv_3, grammarAccess.getEvolutionRulesAccess().getBirthKeyword_3_0());
			}
			    |
			otherlv_4='OverCrowd'
			{
				newLeafNode(otherlv_4, grammarAccess.getEvolutionRulesAccess().getOverCrowdKeyword_3_1());
			}
			    |
			otherlv_5='xisolate'
			{
				newLeafNode(otherlv_5, grammarAccess.getEvolutionRulesAccess().getXisolateKeyword_3_2());
			}
			    |
			otherlv_6='Survive'
			{
				newLeafNode(otherlv_6, grammarAccess.getEvolutionRulesAccess().getSurviveKeyword_3_3());
			}
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall());
	}
	this_OrExpression_0=ruleOrExpression
	{
		$current = $this_OrExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='||'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrExpressionAccess().getVertCalLNeVertCalLNeKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"game.of.life.tasks.TASKDSL.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getComparisonExpressionParserRuleCall_0());
		}
		this_ComparisonExpression_0=ruleComparisonExpression
		{
			$current = $this_ComparisonExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='&&'
			{
				newLeafNode(otherlv_2, grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightComparisonExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparisonExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"game.of.life.tasks.TASKDSL.ComparisonExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonExpressionRule()); }
	iv_ruleComparisonExpression=ruleComparisonExpression
	{ $current=$iv_ruleComparisonExpression.current; }
	EOF;

// Rule ComparisonExpression
ruleComparisonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonExpressionAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=rulePrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonExpressionAccess().getComparisonExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='<'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getComparisonExpressionAccess().getOperatorLessThanSGnKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='<='
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getComparisonExpressionAccess().getOperatorLessThanSGnEqualsSGnKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
						    |
						lv_operator_2_3='=='
						{
							newLeafNode(lv_operator_2_3, grammarAccess.getComparisonExpressionAccess().getOperatorEqualsSGnEqualsSGnKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_3, null);
						}
						    |
						lv_operator_2_4='>='
						{
							newLeafNode(lv_operator_2_4, grammarAccess.getComparisonExpressionAccess().getOperatorGreaterThanSGnEqualsSGnKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_4, null);
						}
						    |
						lv_operator_2_5='>'
						{
							newLeafNode(lv_operator_2_5, grammarAccess.getComparisonExpressionAccess().getOperatorGreaterThanSGnKeyword_1_1_0_4());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_5, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"game.of.life.tasks.TASKDSL.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesSKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRGhtParenthesSKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_1());
		}
		this_Literal_3=ruleLiteral
		{
			$current = $this_Literal_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLiteralAccess().getLiteralAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0='true'
					{
						newLeafNode(lv_value_1_0, grammarAccess.getLiteralAccess().getValueTrueKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_0, "true");
					}
				)
			)
		)
		    |
		otherlv_2='false'
		{
			newLeafNode(otherlv_2, grammarAccess.getLiteralAccess().getFalseKeyword_1());
		}
		    |
		this_INT_3=RULE_INT
		{
			newLeafNode(this_INT_3, grammarAccess.getLiteralAccess().getINTTerminalRuleCall_2());
		}
		    |
		this_STRING_4=RULE_STRING
		{
			newLeafNode(this_STRING_4, grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_3());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
