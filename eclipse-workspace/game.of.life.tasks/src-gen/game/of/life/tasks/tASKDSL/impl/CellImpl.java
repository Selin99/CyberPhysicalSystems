/**
 * generated by Xtext 2.28.0
 */
package game.of.life.tasks.tASKDSL.impl;

import game.of.life.tasks.tASKDSL.Cell;
import game.of.life.tasks.tASKDSL.TASKDSLPackage;
import game.of.life.tasks.tASKDSL.avAction;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Cell</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link game.of.life.tasks.tASKDSL.impl.CellImpl#getName <em>Name</em>}</li>
 *   <li>{@link game.of.life.tasks.tASKDSL.impl.CellImpl#getX <em>X</em>}</li>
 *   <li>{@link game.of.life.tasks.tASKDSL.impl.CellImpl#getY <em>Y</em>}</li>
 *   <li>{@link game.of.life.tasks.tASKDSL.impl.CellImpl#getNNo <em>NNo</em>}</li>
 *   <li>{@link game.of.life.tasks.tASKDSL.impl.CellImpl#getS <em>S</em>}</li>
 *   <li>{@link game.of.life.tasks.tASKDSL.impl.CellImpl#getAvAction <em>Av Action</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CellImpl extends MinimalEObjectImpl.Container implements Cell
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getX() <em>X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected static final int X_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getX() <em>X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected int x = X_EDEFAULT;

  /**
   * The default value of the '{@link #getY() <em>Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getY()
   * @generated
   * @ordered
   */
  protected static final int Y_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getY() <em>Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getY()
   * @generated
   * @ordered
   */
  protected int y = Y_EDEFAULT;

  /**
   * The default value of the '{@link #getNNo() <em>NNo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNNo()
   * @generated
   * @ordered
   */
  protected static final int NNO_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNNo() <em>NNo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNNo()
   * @generated
   * @ordered
   */
  protected int nNo = NNO_EDEFAULT;

  /**
   * The default value of the '{@link #getS() <em>S</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getS()
   * @generated
   * @ordered
   */
  protected static final int S_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getS() <em>S</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getS()
   * @generated
   * @ordered
   */
  protected int s = S_EDEFAULT;

  /**
   * The cached value of the '{@link #getAvAction() <em>Av Action</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAvAction()
   * @generated
   * @ordered
   */
  protected avAction avAction;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CellImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TASKDSLPackage.Literals.CELL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TASKDSLPackage.CELL__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getX()
  {
    return x;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setX(int newX)
  {
    int oldX = x;
    x = newX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TASKDSLPackage.CELL__X, oldX, x));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getY()
  {
    return y;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setY(int newY)
  {
    int oldY = y;
    y = newY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TASKDSLPackage.CELL__Y, oldY, y));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNNo()
  {
    return nNo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNNo(int newNNo)
  {
    int oldNNo = nNo;
    nNo = newNNo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TASKDSLPackage.CELL__NNO, oldNNo, nNo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getS()
  {
    return s;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setS(int newS)
  {
    int oldS = s;
    s = newS;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TASKDSLPackage.CELL__S, oldS, s));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public avAction getAvAction()
  {
    return avAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAvAction(avAction newAvAction, NotificationChain msgs)
  {
    avAction oldAvAction = avAction;
    avAction = newAvAction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TASKDSLPackage.CELL__AV_ACTİON, oldAvAction, newAvAction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAvAction(avAction newAvAction)
  {
    if (newAvAction != avAction)
    {
      NotificationChain msgs = null;
      if (avAction != null)
        msgs = ((InternalEObject)avAction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TASKDSLPackage.CELL__AV_ACTİON, null, msgs);
      if (newAvAction != null)
        msgs = ((InternalEObject)newAvAction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TASKDSLPackage.CELL__AV_ACTİON, null, msgs);
      msgs = basicSetAvAction(newAvAction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TASKDSLPackage.CELL__AV_ACTİON, newAvAction, newAvAction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TASKDSLPackage.CELL__AV_ACTİON:
        return basicSetAvAction(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TASKDSLPackage.CELL__NAME:
        return getName();
      case TASKDSLPackage.CELL__X:
        return getX();
      case TASKDSLPackage.CELL__Y:
        return getY();
      case TASKDSLPackage.CELL__NNO:
        return getNNo();
      case TASKDSLPackage.CELL__S:
        return getS();
      case TASKDSLPackage.CELL__AV_ACTİON:
        return getAvAction();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TASKDSLPackage.CELL__NAME:
        setName((String)newValue);
        return;
      case TASKDSLPackage.CELL__X:
        setX((Integer)newValue);
        return;
      case TASKDSLPackage.CELL__Y:
        setY((Integer)newValue);
        return;
      case TASKDSLPackage.CELL__NNO:
        setNNo((Integer)newValue);
        return;
      case TASKDSLPackage.CELL__S:
        setS((Integer)newValue);
        return;
      case TASKDSLPackage.CELL__AV_ACTİON:
        setAvAction((avAction)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TASKDSLPackage.CELL__NAME:
        setName(NAME_EDEFAULT);
        return;
      case TASKDSLPackage.CELL__X:
        setX(X_EDEFAULT);
        return;
      case TASKDSLPackage.CELL__Y:
        setY(Y_EDEFAULT);
        return;
      case TASKDSLPackage.CELL__NNO:
        setNNo(NNO_EDEFAULT);
        return;
      case TASKDSLPackage.CELL__S:
        setS(S_EDEFAULT);
        return;
      case TASKDSLPackage.CELL__AV_ACTİON:
        setAvAction((avAction)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TASKDSLPackage.CELL__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case TASKDSLPackage.CELL__X:
        return x != X_EDEFAULT;
      case TASKDSLPackage.CELL__Y:
        return y != Y_EDEFAULT;
      case TASKDSLPackage.CELL__NNO:
        return nNo != NNO_EDEFAULT;
      case TASKDSLPackage.CELL__S:
        return s != S_EDEFAULT;
      case TASKDSLPackage.CELL__AV_ACTİON:
        return avAction != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", x: ");
    result.append(x);
    result.append(", y: ");
    result.append(y);
    result.append(", nNo: ");
    result.append(nNo);
    result.append(", s: ");
    result.append(s);
    result.append(')');
    return result.toString();
  }

} //CellImpl
